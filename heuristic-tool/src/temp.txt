const Form2 = (props) => {
  const [questions, setQuestions] = useState([
    { question: "Are product descriptions clear and detailed with high-quality images?", options: ["Yes", "Room for improvement", "No", "Not Applicable"], scores: [2, 1, 0, -1] },
    { question: "Is the website easy to navigate and find what you are looking for?", options: ["Yes", "Room for improvement", "No", "Not Applicable"], scores: [2, 1, 0, -1] },
    { question: "Was the checkout process smooth and easy to complete?", options: ["Yes", "Room for improvement", "No", "Not Applicable"], scores: [2, 1, 0, -1] },
  ]);
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [scores, setScores] = useState(Array(questions.length).fill(0));
  const [selectedOption, setSelectedOption] = useState(null);
  
  const handleNext = (e) => {
    e.preventDefault();
    const score = questions[currentQuestion].scores[selectedOption];
    const newScores = [...scores];
    var applicable = 0;
    var notApplicable = 0;
    newScores[currentQuestion] = score;
    if (currentQuestion < questions.length - 1) {
      setCurrentQuestion(currentQuestion + 1);
      setSelectedOption(null);
    } else {
      const sum = newScores.reduce((total, current) => {
        if (current >= 0) {
          applicable++;
          return total + current;
        } else {
          notApplicable++;
          return total;
        }
      }, 0);
    }
    setScores(newScores);
  }
  
  const handlePrevious = (e) => {
    e.preventDefault();
    if (currentQuestion > 0) {
      setCurrentQuestion(currentQuestion - 1);
      setSelectedOption(null);
    } else {
    }
  }

  const handleOptionClick = (index) => {
    setSelectedOption(index);
  } 

there are different categories, under one category there will be different questions. modify the above code